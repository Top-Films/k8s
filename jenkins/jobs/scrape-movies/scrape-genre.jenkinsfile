pipeline {
	agent {
		kubernetes {
			defaultContainer 'buildpack'
			yaml '''
kind: Pod
spec:
  containers:
  - name: buildpack
    image: maxmorhardt/topfilms-jenkins-buildpack:latest
    imagePullPolicy: Always
    securityContext:
      privileged: true
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: node-role.kubernetes.io/control-plane
            operator: DoesNotExist
'''
		}
	}

	parameters {
		string(name: 'TAG', defaultValue: params.TAG ?: 'scrape-movies/1.0.0', description: 'Git tag version', trim: true)
		string(name: 'GENRE_NAME', defaultValue: 'Action Adventure', description: 'Name of genre to scrape', trim: true)
	}

	environment { 
		GITHUB_URL = 'https://github.com/Top-Films/k8s'
	}

	stages {

		stage('Git Clone') {
			steps {
				script {
					checkout scmGit(
						branches: [[
							name: "$TAG"
						]],
						userRemoteConfigs: [[
							credentialsId: 'github',
							url: "$GITHUB_URL"
						]]
					)

					sh 'ls -lah'
				}
			}
		}

		stage('Scrape Genre') {
			steps {
				script {
					withCredentials([
						usernamePassword(credentialsId: 'postgres-topfilms', usernameVariable: 'DB_USERNAME', passwordVariable: 'DB_PASSWORD'),
						usernamePassword(credentialsId: 'no-reply-topfilms', usernameVariable: 'EMAIL_USERNAME', passwordVariable: 'EMAIL_PASSWORD'),
						string(credentialsId: 'postgres-host', variable: 'DB_HOST'),
						string(credentialsId: 'postgres-port', variable: 'DB_PORT'),
						string(credentialsId: 'postgres-topfilms-db', variable: 'DB_NAME')
					]) {
						sh """
							cd jenkins/jobs/scrape-movies

							python3 -m venv .venv
							. .venv/bin/activate
							pip3 install -r requirements.txt

							chromium --version
							chromedriver --version

							python3 scrape_genre.py
						"""
					}
				}
			}
		}

	}
}